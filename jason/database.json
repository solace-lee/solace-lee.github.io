[
	{
		"title":"node.js入门-1-简介",
		"date":"20180716",
		"label":"NodeJs",
		"content":"Node.js 前言 Node.js之父 Ryan Dahl : 2009年推出Node.js, 2012年退出Node.js, 转战Go语言 Node.js出现的背景 为了解决Web服务器的高并发性能问题 缩短客户端发送请求到服务端相应请求的时长 发送请求快一点 无法控制（客户端网速决定） 响应快一点可以控制（服务器带宽提高，CDN加速） 服务器处理请求任务快一点可以控制（优秀的程序员 / 多线程） 服务器从磁盘读取/写入数据到数据库快一点无法控制（磁盘的存取速度有上限） 要避免传统服务器运作流程中出现的I/O阻塞问题 事件驱动 异步I/O V8引擎 什么是V8引擎 一款专门对JavaScript语言进行解释和执行的流程虚拟机 比如把V8引擎嵌入到浏览器中，那么我们写的JavaScript代码就会被浏览器所执行；如果把V8引擎嵌入到NodeJS环境下，那我我们写的JavaScript代码就会被服务器所执行 只要V8引擎能够嵌入到不同的宿主环境中，那么就可以用JavaScript语言来写各种不同领域的应用。-万能的JS",
		"code_link":"",
		"demo_link":""
	},
	{
		"title":"node.js入门-2-简介",
		"date":"20180716",
		"label":"JavaScript",
		"content":"Node.js 前言 Node.js之父 Ryan Dahl : 2009年推出Node.js, 2012年退出Node.js, 转战Go语言 Node.js出现的背景 为了解决Web服务器的高并发性能问题 缩短客户端发送请求到服务端相应请求的时长 发送请求快一点 无法控制（客户端网速决定） 响应快一点可以控制（服务器带宽提高，CDN加速） 服务器处理请求任务快一点可以控制（优秀的程序员 / 多线程） 服务器从磁盘读取/写入数据到数据库快一点无法控制（磁盘的存取速度有上限） 要避免传统服务器运作流程中出现的I/O阻塞问题 事件驱动 异步I/O V8引擎 什么是V8引擎 一款专门对JavaScript语言进行解释和执行的流程虚拟机 比如把V8引擎嵌入到浏览器中，那么我们写的JavaScript代码就会被浏览器所执行；如果把V8引擎嵌入到NodeJS环境下，那我我们写的JavaScript代码就会被服务器所执行 只要V8引擎能够嵌入到不同的宿主环境中，那么就可以用JavaScript语言来写各种不同领域的应用。-万能的JS",
		"code_link":"",
		"demo_link":""	
	},
	{
		"title":"添加博客主页的点击事件等",
		"date":"20180719",
		"label":["HTML","CSS3","JavaScript"],
		"content":"Node.js 前言 Node.js之父 Ryan Dahl : 2009年推出Node.js, 2012年退出Node.js, 转战Go语言 Node.js出现的背景 为了解决Web服务器的高并发性能问题 缩短客户端发送请求到服务端相应请求的时长 发送请求快一点 无法控制（客户端网速决定） 响应快一点可以控制（服务器带宽提高，CDN加速） 服务器处理请求任务快一点可以控制（优秀的程序员 / 多线程） 服务器从磁盘读取/写入数据到数据库快一点无法控制（磁盘的存取速度有上限） 要避免传统服务器运作流程中出现的I/O阻塞问题 事件驱动 异步I/O V8引擎 什么是V8引擎 一款专门对JavaScript语言进行解释和执行的流程虚拟机 比如把V8引擎嵌入到浏览器中，那么我们写的JavaScript代码就会被浏览器所执行；如果把V8引擎嵌入到NodeJS环境下，那我我们写的JavaScript代码就会被服务器所执行 只要V8引擎能够嵌入到不同的宿主环境中，那么就可以用JavaScript语言来写各种不同领域的应用。-万能的JS",
		"code_link":"",
		"demo_link":""
	},
	{
		"title":"个人博客的优化--CSS3的响应式开发",
		"date":"20180718",
		"label":["HTML","CSS3"],
		"content":"好了，响应式开发也完成了，并优化了部分冗余代码，现在还有一个问题就是之前的学习中据说动态加载网页内容的体验会更好，那我的菜单栏是不是不要做成链接的形式呢？做成JS控制的方式加载相应模块或者功能应该不错，想想好像还挺复杂的，今晚大概想想具体的实现流程，明天可以试一试。",
		"code_link":"",
		"demo_link":""	
	},
	{
		"title":"搭建我的第一个静态个人博客",
		"date":"20180717",
		"label":["HTML","CSS3"],
		"content":"熟悉好了GitHub，也知道了GitHub的工作方式，并注册了一个个人博客域名，接下来就是搭建整体的HTML，CSS3的博客框架了。我的想法是先用静态网页的方式把网站大致地先建立起来，然后再一点点完善和改进，好啦，先确定版式，并开始写HTML框架……</br>dang dang dang，框架结构写好了，立马就要填充CSS3看效果了。</br>上传上来看看主页效果，嗯，不错，先这样。明天继续完善一下，我觉得现在移动端这么火，是不是应该改改CSS3做个响应式的博客呢。",
		"code_link":"",
		"demo_link":""
	},
	{
		"title":"初次接触GitHub",
		"date":"20180716",
		"label":"Other",
		"content":"第一次接触到GitHub还是很久之前在大学期间找手机的刷机包，那时候觉得这里有好多大神，好多计算机高手，各种神奇的代码都来自于这里，那时候就已经萌生出以后也要成为一个程序员的想法，机缘巧合，在成为程序员的道路上饶了一个弯，还好现在进入这个行业还不算太晚，经过平时闲时的积累，现在写静态网页已经没有什么问题了，但是会来到这里肯定就不会止步于此，这是第一天，接触GitHub，先让我熟悉一下这个著名的代码托管平台是怎么使用的吧。",
		"code_link":"",
		"demo_link":""	
	}
]